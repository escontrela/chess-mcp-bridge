package com.davidp.chessjourney.chess_mcp_bridge;

import org.springframework.ai.tool.annotation.Tool;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatusCode;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestClient;

@Component
public class ActiveUserTool {

    private final RestClient http;
    private final String activeUserPath;

    public ActiveUserTool(
            @Value("${chess.coreBaseUrl}") String baseUrl,
            @Value("${chess.activeUserPath}") String activeUserPath
    ) {
        this.http = RestClient.builder().baseUrl(baseUrl).build();
        this.activeUserPath = activeUserPath;
    }

    @Tool(
        name = "getActiveUser",
        description = "Obtiene el usuario activo (id, firstname, lastname, email, initials) desde ChessJourney."
    )
    public Object getActiveUser() {
        try {
            var resp = http.get().uri(activeUserPath).retrieve()
                    .onStatus(HttpStatusCode::is4xxClientError, (req, res) -> {
                        throw new NoActiveUserException("No active user found");
                    })
                    .toEntity(UserResponse.class);

            var body = resp.getBody();
            if (body == null) return new ErrorResponse("Empty response from core");
            return body;
        } catch (NoActiveUserException e) {
            return new ErrorResponse(e.getMessage());
        } catch (Exception e) {
            return new ErrorResponse("Bridge error calling core: " + e.getMessage());
        }
    }

    // ----- DTOs alineados con tu Javalin -----

    public static class UserResponse {
        private long id;
        private String firstname;
        private String lastname;
        private String email;
        private String initials;

        public long getId() { return id; }
        public String getFirstname() { return firstname; }
        public String getLastname() { return lastname; }
        public String getEmail() { return email; }
        public String getInitials() { return initials; }

        public void setId(long id) { this.id = id; }
        public void setFirstname(String firstname) { this.firstname = firstname; }
        public void setLastname(String lastname) { this.lastname = lastname; }
        public void setEmail(String email) { this.email = email; }
        public void setInitials(String initials) { this.initials = initials; }
    }

    public static class ErrorResponse {
        private final String message;
        public ErrorResponse(String message) { this.message = message; }
        public String getMessage() { return message; }
    }

    private static class NoActiveUserException extends RuntimeException {
        public NoActiveUserException(String msg) { super(msg); }
    }
}